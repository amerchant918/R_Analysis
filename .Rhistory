setwd("C:/Users/TempUser/Desktop/School/Repositories/R_Analysis/Challenge")
install.packages("tidyverse")
library(tidyverse)
MechaCar_mpg <- read.csv(file='MechaCar_mpg.csv', check.names=F, stringsAsFactors = F)
head(MechaCar_mpg)
# Rename columns of the dataset
MechaCar_mpg <- MechaCar_mpg %>%
rename(
vlength = "vehicle length",
vweight = "vehicle weight",
spangle = "spoiler angle",
grclearance = "ground clearance")
head(MechaCar_mpg)
# Generate multiple linear regression model
lm(formula = mpg ~ vlength + vweight + spangle + grclearance + AWD, data = MechaCar_mpg)
# mpg = 6.27*vlength + 0*vweight + 0.07*spangle + 3.55*grclearance - 3.41*AWD - 104
# From this formula we can already see that vehicle length and spoiler angle have
# no (or almost no) impact on the mpg of the vehicle so we can rewrite our model:
# mpg = 6.27*vlength + 3.55*grclearance - 3.41*AWD - 104
# Generate summary statistics
summary(lm(mpg ~ vlength + vweight + spangle + grclearance + AWD,MechaCar_mpg))
# According to the summary output, the r-squared value of the multiple linear
# regression model is 0.71, which means that roughly 71% of all mpg predictions
# will be correct while using this regression model.
# In addition, the p-value of our linear regression is 5.35e-11, which is much smaller
# than our assumed significance level of 0.05. Therefore, we can state that there is
# sufficient evidence to reject our null hypothesis.
# Reading the Suspension Coil dataset
susp_coil <- read.csv(file='Suspension_Coil.csv', check.names=F, stringsAsFactors = F)
# Visualizing PSI distribution using density plot
ggplot(susp_coil,aes(x=PSI)) + geom_density()
# The distribution looks normal
shapiro.test(susp_coil$PSI)
# p-value is a lot less than 0.05 so we can state that the distribution of
# the sample PSI set is normal.
summary(susp_coil$PSI) # mean = 1498.78 and median = 1500
var(susp_coil$PSI) # variance = 62.29
sd(susp_coil$PSI) # standard deviation = 7.89
# Suspension Coil T-Test
t.test(x=susp_coil$PSI,mu=1500)
# Import libraries
library(tidyverse)
# Import datasets
MechaCarmpg_table <- read.csv(file = "MechaCar_mpg.csv", header = TRUE, sep = ",")
SuspensionCoil_table <- read.csv(file = "Suspension_Coil.csv", header = TRUE, sep = ",")
#Create Linear Regression
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table)
# Create summary statistics
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table))
View(SuspensionCoil_table)
View(SuspensionCoil_table)
# Import libraries
library(tidyverse)
# Import datasets
MechaCarmpg_table <- read.csv(file = "MechaCar_mpg.csv", header = TRUE, sep = ",")
SuspensionCoil_table <- read.csv(file = "Suspension_Coil.csv", header = TRUE, sep = ",")
#Create Linear Regression
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table)
# Create summary statistics
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table))
# Visualizing PSI distribution using density plot
ggplot(susp_coil,aes(x=PSI)) + geom_density()
# Visualizing PSI distribution using density plot
ggplot(SuspensionCoil_table,aes(x=PSI)) + geom_density()
shapiro.test(susp_coil$PSI)
shapiro.test(SuspensionCoil_table$PSI)
#Summary Suspension Coil
summary(susp_coil$PSI)
#Summary Suspension Coil
summary(SuspensionCoil_table$PSI)
#Variance
var(SuspensionCoil_table$PSI)
#Standard Deviation
sd(SuspensionCoil_table$PSI)
#T-Test
t.test(x=SuspensionCoil_table$PSI,mu=1500)
#Median
median(SuspensionCoil_table$PSI)
# Import libraries
library(tidyverse)
# Import datasets
MechaCarmpg_table <- read.csv(file = "MechaCar_mpg.csv", header = TRUE, sep = ",")
SuspensionCoil_table <- read.csv(file = "Suspension_Coil.csv", header = TRUE, sep = ",")
#Create Linear Regression
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table)
# Create summary statistics
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table))
# SUSPENSION COIL T-TEST
# Visualizing PSI distribution using density plot
ggplot(SuspensionCoil_table,aes(x=PSI)) + geom_density()
#Normality Test
shapiro.test(SuspensionCoil_table$PSI)
#Quartile Summary Suspension Coil
summary(SuspensionCoil_table$PSI)
#Median
median(SuspensionCoil_table$PSI)
#Variance
var(SuspensionCoil_table$PSI)
#Standard Deviation
sd(SuspensionCoil_table$PSI)
#T-Test
t.test(x=SuspensionCoil_table$PSI,mu=1500)
#Mean
mean(SuspensionCoil_table$PSI)
# Import libraries
library(tidyverse)
# Import data
MechaCarmpg_table <- read.csv(file = "MechaCar_mpg.csv", header = TRUE, sep = ",")
SuspensionCoil_table <- read.csv(file = "Suspension_Coil.csv", header = TRUE, sep = ",")
#Plot MechaCar table to check for normality
ggplot(MechaCarmpg_table,aes(x=mpg)) + geom_density()
#Create Linear Regression
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table)
# Create summary statistics
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table))
# SUSPENSION COIL T-TEST
# Visualizing PSI distribution using density plot
ggplot(SuspensionCoil_table,aes(x=PSI)) + geom_density()
#Normality Test
shapiro.test(SuspensionCoil_table$PSI)
#Quartile Summary Suspension Coil
summary(SuspensionCoil_table$PSI)
#Median
median(SuspensionCoil_table$PSI)
#Variance
var(SuspensionCoil_table$PSI)
#Standard Deviation
sd(SuspensionCoil_table$PSI)
#T-Test/mean
t.test(x=SuspensionCoil_table$PSI,mu=1500)
# Import libraries
library(tidyverse)
# Import data
MechaCarmpg_table <- read.csv(file = "MechaCar_mpg.csv", header = TRUE, sep = ",")
SuspensionCoil_table <- read.csv(file = "Suspension_Coil.csv", header = TRUE, sep = ",")
#Plot MechaCar table to check for normality
ggplot(MechaCarmpg_table,aes(x=mpg)) + geom_density()
#Create Linear Regression
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table)
# Create summary statistics
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table))
# SUSPENSION COIL T-TEST
#Breaking up the dataset by Lot
group1 <- SuspensionCoil_table %>% filter(Manufacturing_Lot == 'Lot1')
group2 <- SuspensionCoil_table %>% filter(Manufacturing_Lot == 'Lot2')
group3 <- SuspensionCoil_table %>% filter(Manufacturing_Lot == 'Lot3')
# Visualizing PSI distribution using density plot
ggplot(SuspensionCoil_table,aes(x=PSI)) + geom_density()
#Normality Test
shapiro.test(SuspensionCoil_table$PSI)
#Quartile Summary Suspension Coil
summary(SuspensionCoil_table$PSI)
#Median
median(SuspensionCoil_table$PSI)
#Variance
var(SuspensionCoil_table$PSI)
#Standard Deviation
sd(SuspensionCoil_table$PSI)
#T-Test/mean
t.test(x=SuspensionCoil_table$PSI,mu=1500)
t.test(group1$PSI, mu=mean(1500))
t.test(group2$PSI, mu=mean(1500))
t.test(group3$PSI, mu=mean(1500))
var(Lot1$PSI)
# Import libraries
library(tidyverse)
# Import data
MechaCarmpg_table <- read.csv(file = "MechaCar_mpg.csv", header = TRUE, sep = ",")
SuspensionCoil_table <- read.csv(file = "Suspension_Coil.csv", header = TRUE, sep = ",")
#Plot MechaCar table to check for normality
ggplot(MechaCarmpg_table,aes(x=mpg)) + geom_density()
#Create Linear Regression
lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table)
# Create summary statistics
summary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD, data = MechaCarmpg_table))
# SUSPENSION COIL T-TEST
#Breaking up the dataset by Lot
Lot1 <- SuspensionCoil_table %>% filter(Manufacturing_Lot == 'Lot1')
Lot2 <- SuspensionCoil_table %>% filter(Manufacturing_Lot == 'Lot2')
Lot3 <- SuspensionCoil_table %>% filter(Manufacturing_Lot == 'Lot3')
# Visualizing PSI distribution using density plot
ggplot(SuspensionCoil_table,aes(x=PSI)) + geom_density()
#Normality Test
shapiro.test(SuspensionCoil_table$PSI)
#Quartile Summary Suspension Coil
summary(SuspensionCoil_table$PSI)
#Median
median(SuspensionCoil_table$PSI)
#Variance
var(SuspensionCoil_table$PSI)
#Standard Deviation
sd(SuspensionCoil_table$PSI)
#T-Test/mean
t.test(x=SuspensionCoil_table$PSI,mu=1500)
t.test(Lot1$PSI, mu=mean(1500))
t.test(Lot2$PSI, mu=mean(1500))
t.test(Lot3$PSI, mu=mean(1500))
var(Lot1$PSI)
var(Lot2$PSI)
var(Lot3$PSI)
